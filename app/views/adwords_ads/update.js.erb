
(() => {
  const {
    promotedStory,
    promoteIsDisabled,
    previousChanges,
    isStatusUpdate,
    isImagesUpdate,
    gadsErrors } = <%= raw @res_data.to_json %>;
  const $table = $('#promoted-stories-table');
  const dt = $table.DataTable();
  const $row = $table.find(`[data-story-id="${promotedStory.id}"]`);

  // this mirrors the createdRow option in the table setup
  const addClickBlockers = () => {
    $row.find('td.promoted-story-title, td.status').prepend('<div class="click-blocker"></div>');
    if (promoteIsDisabled) {
      $row.find('td.status .click-blocker').attr({
        'data-toggle': 'tooltip',
        'data-placement': 'left',
        'data-title': 'Contact Customer Stories to enable this feature'
      })
    }
  };
  const initStatusSwitch = () => {
    $row
      .find('.bs-switch.promote-control')
        .bootstrapSwitch({ size: 'small', disabled: promoteIsDisabled })
        .end()
      .find('td.status [data-toggle="tooltip"]')  // may or may not be there depending on company.promote-tr
        .tooltip({ container: 'body', delay: { show: 500, hide: 0 } });
  };
  const updateRow = () => {
    dt.row($row).data(promotedStory);
    addClickBlockers();  //  this must run before initStatusSwitch()
    initStatusSwitch();
    $row.attr('data-submitted', '');
  };

  toggleFormDone($('#ads-images-form'), false);
  updateRow();
  $('#ads-images-modal')
    .one('hidden.bs.modal', () => {
      // https://datatables.net/forums/discussion/46673/flash-animation-of-the-table-row-that-has-been-edited#Comment_123539
      setTimeout(() => {
        $row.addClass('highlight');
        setTimeout(() => {
          $row.addClass('noHighlight').removeClass('highlight');
          setTimeout(() => $row.removeClass('noHighlight'), 550);
        }, 500);
      }, 20);
    })
    .modal('hide');
  
  /*
  const flashError = () => (
    $row
      .find('td.flash > div')
        .addClass('alert alert-danger')
        .end()        
      .children()
        .toggle();
  );
  const flashImagesSuccess = () => {
    var $td = $row.find('td.promoted-story-images'),
        landscapeImages = dt.row($row).data().ads_images.filter(function (image) {
                            return image.type === 'LandscapeImage'
                          });
    $td.addClass('alert alert-success')
        .html('<i class="fa fa-fw fa-check"></i>&nbsp;&nbsp;<span>Updated</span>');
    setTimeout(function () {
      $td.empty()
          .removeClass('alert alert-success')
          .html(
            '<div class="fileinput">' +
              '<div class="fileinput-preview thumbnail">' +
                '<img src="' + (landscapeImages.length ? landscapeImages[0].image_url : '') + '" alt="promoted story image">' +
              '</div>' +
              '<input type="file" name="image_url" id="image_url" class="hidden" ' +
            '</div>'
          )
    }, 2500);
  };
  if (isStatusUpdate) {
    const $switch = $row.find('.bootstrap-switch');
    const prevStatus = previousChanges[1][0];
        newStatus = res.gadsErrors ? prevStatus : res.previousChanges[1][1];

    if (res.gadsErrors) {
      flashError();
      
      // revert to previous state
      $switch
        .find(newStatus === 'ENABLED' ? '.bootstrap-switch-handle-on' : '.bootstrap-switch-handle-off')
          .find('.fa-spin, ' + (newStatus === 'ENABLED' ? '.fa-play' : '.fa-pause'))
            .toggle()
            .end()
          .end()
        .find('.bs-switch.promote-control')
          .bootstrapSwitch('toggleState');

    } else {
      $switch
        .find(newStatus === 'ENABLED' ? '.bootstrap-switch-handle-on' : '.bootstrap-switch-handle-off')
          .find('.fa-spin, .fa-check')
            .toggle();
      setTimeout(updateRow, 2500);
    }
  } else if (isImagesUpdate) {
    toggleFormDone($('#ads-images-form'), false);
    $('#ads-images-modal')
      .one('hidden.bs.modal', function () {
        if (gadsErrors) {
          flashError()
        } else {
          flashImagesSuccess();
          // console.log($row.data('submitted'))
          setTimeout(updateRow, 2500);
        }
      })
      .modal('hide');
    if (!gadsErrors) updateRow();
  }
  */
})();