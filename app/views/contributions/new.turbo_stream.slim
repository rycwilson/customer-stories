= turbo_stream.append 'main-modal-body' do
  = form_with( \
      model: @success&.contributions&.build || Contribution.new,
      url: company_contributions_path(@company),
      id: 'new-contribution-form',
      data: { \
        controller: 'new-contribution',
        action: [ \
          'submit->new-contribution#validate',
          'turbo:submit-start->new-contribution#animateSubmitBtn'].join(' ') },
      html: { \
        novalidate: true,
        autocomplete: 'off' }) do |form|

    = form.fields_for(:success, @success || form.object.build_success) do |success_fields|
      = success_fields.hidden_field(:id, value: '', disabled: true, data: { new_contribution_target: 'successField' })
      = success_fields.hidden_field(:name, disabled: true, data: { new_contribution_target: 'successName successField' })
      = success_fields.hidden_field( \
          :curator_id,
          value: success_fields.object.curator_id || current_user.id,
          disabled: true,
          data: { new_contribution_target: 'successField' })
      /= success_fields.hidden_field(:customer_id, data: { new_contribution_target: 'successCustomerId' })
      = success_fields.fields_for(:customer, success_fields.object.customer || success_fields.object.build_customer) do |customer_fields|
        = customer_fields.hidden_field(:id, value: '', disabled: true, data: { new_contribution_target: 'customerField'})
        = customer_fields.hidden_field(:name, disabled: true, data: { new_contribution_target: 'customerName customerField' })
        = customer_fields.hidden_field(:company_id, value: @company.id, disabled: true, data: { new_contribution_target: 'customerField' })

      .form-group
        = success_fields.label(:customer_id, 'Customer', style: "#{@story ? 'pointer-events:none' : ''}")
        = success_fields.collection_select( \
            :customer_id,
            @company.customers,
            :id,
            :name,
            { include_blank: true }.merge(@customer_id ? { selected: @customer_id } : {}),
            { class: "form-control #{@story ? 'readonly' : ''}",
              placeholder: 'Select or enter the name of a new Customer',
              required: true,
              data: { \
                controller: 'tomselect',
                new_contribution_target: 'customerSelect',
                tomselect_kind_value: 'customer',
                tomselect_custom_options_value: { create: true, persist: false, plugins: {} },
                tomselect_prevent_focus_value: @story ? true : false,
                action: 'new-contribution#onChangeCustomer',
                field_name: "#{success_fields.object_name}[customer_id]" } })
        .help-block.with-errors 

    - if @story.present?
      .form-group
        = label_tag("story-#{@story.id}-title", 'Customer Story', style: 'pointer-events:none')
        = select_tag( \
            nil,
            options_for_select([[@story.title, "1"]], selected: 1),
            { id: "story-#{@story.id}-title", 
              class: 'form-control readonly', 
              data: { \
                controller: 'tomselect',
                tomselect_prevent_focus_value: true } })

    - else
      .form-group data-action="tomselect:dropdown-did-open->new-contribution#filterCustomerWinOptions"
        = form.label(:success_id, 'Customer Win')
        = form.select( \
            :success_id,
            options_for_select( \
              @company.successes.real.map(&:select_option),
              selected: @success&.id),
            { include_blank: true },
            { class: 'form-control',
              placeholder: 'Select or enter the name of a new Customer Win',
              required: true,
              data: { \
                controller: 'tomselect',
                tomselect_kind_value: 'customerWin',
                tomselect_custom_options_value: { create: true, persist: false, plugins: {} },
                new_contribution_target: 'customerWinSelect',
                action: 'new-contribution#onChangeCustomerWin',
                field_name: "#{form.object_name}[success_id]" } })
        .help-block.with-errors

    .form-group
      = form.label(:contributor_id, 'Contributor')
      = form.collection_select( \
          :contributor_id,
          @company.contacts(as_select_options: true),
          :id,
          :full_name,
          { include_blank: true,
            selected: @contributor_id || [],
            disabled: @success ? @success.contributors.reorder(nil).pluck(:id) : [] },
          { class: 'form-control',
            placeholder: 'Select or add a new Contact',
            required: true,
            data: { \
              controller: 'tomselect',
              tomselect_kind_value: 'contributor',
              new_contribution_target: 'contributorSelect',
              action: 'new-contribution#onChangeContact',
              field_name: "#{form.object_name}[contributor_id]" } })
      .help-block.with-errors

    = render( \
        'companies/shared/new_contact', 
        parent_form_or_fields: form,
        controller_id: 'new-contribution',
        contact_type: 'contributor')

    .form-group
      = form.label(:invitation_template_id, 'Invitation Template')
      = form.collection_select( \
          :invitation_template_id,
          @company.invitation_templates.sort_by { |t| t.name },
          :id,
          :name,
          { include_blank: true },
          { class: 'form-control',
            placeholder: 'Select',
            data: { \
              controller: 'tomselect',
              tomselect_kind_value: 'invitationTemplate' } })
      .help-block 
        | Optional

    .form-group
      = form.label(:referrer_id, 'Referred by')
      = form.collection_select( \
          :referrer_id,
          @company.contacts(as_select_options: true),
          :id,
          :full_name,
          { include_blank: true },
          { name: '',
            class: 'form-control',
            placeholder: 'Select or add a new Contact',
            data: { \
              controller: 'tomselect',
              tomselect_kind_value: 'referrer',
              new_contribution_target: 'referrerSelect',
              action: 'new-contribution#onChangeContact',
              field_name: "#{form.object_name}[referrer_id]" } })
      .help-block 
        | Optional

    = render( \
        'companies/shared/new_contact', 
        parent_form_or_fields: form,
        controller_id: 'new-contribution',
        contact_type: 'referrer')

= turbo_stream.append 'main-modal-content' do 
  .modal-footer data-modal-target="footer"
    button.btn.btn-default type="button" data-dismiss="modal" Cancel
    = button_tag( \
        '',
        type: 'submit',
        class: 'btn btn-success',
        form: 'new-contribution-form',
        data: { content: 'Add Contributor', disable_with_html: disabled_submit_button_html })