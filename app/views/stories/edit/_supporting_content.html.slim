= form_with( \
    model: story,
    format: :json,
    html: { \
      id: 'story-supporting-content-form',
      class: 'form-horizontal',
      autocomplete: 'off' }) do |form|

  .form-group 
    .visible-sm-block.col-sm-offset-1.col-sm-10
      = form.label(:quote, 'Customer Quote')
      = form.text_area( \
          :quote,
          { rows: 3, class: 'form-control', placeholder: 'Select a Contributor to autofill their Contribution here' })
    = form.label(:quote, 'Customer Quote', class: 'control-label col-md-3 visible-md-inline-block visible-lg-inline-block')
    .col-md-7.col-lg-6.visible-md-block.visible-lg-block
      = collection_select( \
          story,
          :featured_contributor_id,
          story.customer.contributors \
            .sort_by { |contact| contact.last_name } \
            .unshift(User.new(id: 0, first_name: 'New', last_name: 'Contact')),
          :id,
          :full_name,
          { include_blank: true },
          { class: 'form-control',
            placeholder: 'Select or create a Contributor',
            required: true,
            data: { \
              controller: 'tomselect',
              tomselect_kind_value: 'contributor' } })
      = form.text_area( \
          :quote,
          { rows: 4, class: 'form-control', placeholder: 'Select a Contributor to autofill their Contribution here' })

  / .form-group
  /   = story_form.label(:quote_attr_name, 'Customer Name')
  /   = story_form.text_field(:quote_attr_name, class: 'form-control', autocomplete: 'off')
  / .form-group
  /   = story_form.label(:quote_attr_title, 'Customer Job Title')
  /   = story_form.text_field(:quote_attr_title, class: 'form-control', autocomplete: 'off')

  .form-group 
    = hidden_field_tag('story[formatted_video_url]', story.video_url)
    .visible-sm-block.col-sm-offset-1.col-sm-10
      = form.label(:video_url, 'Video URL')
      = form.text_field(:video_url, class: 'form-control', placeholder: 'YouTube, Vimeo, or Wistia', autocomplete: 'off')
    = form.label(:video_url, 'Video URL', class: 'control-label col-md-3 visible-md-inline-block visible-lg-inline-block')
    .col-md-7.col-lg-6.visible-md-block.visible-lg-block
      = form.text_field(:video_url, class: 'form-control', placeholder: 'YouTube, Vimeo, or Wistia', autocomplete: 'off')
      #video-container.text-center
        - if story.video_info[:provider] == 'wistia'
          script async="" src="//fast.wistia.com/embed/medias/#{story.video_info[:id]}.jsonp"
          script async="" src="//fast.wistia.com/assets/external/E-v1.js"
          .wistia_responsive_padding style="padding:56.25% 0 0 0; position:relative;"
            .wistia_responsive_wrapper style="height:100%;left:0;position:absolute;top:0;width:100%;"
              .wistia_embed {
                class="wistia_async_#{story.video_info[:id]} popover=true popoverAnimateThumbnail=true\ 
                  videoFoam=true"
                style="display:inline-block; width:100%; height:100%" }
                |&nbsp;
        - elsif story.video_url.present?
          .video-thumb-container.embed-responsive.embed-responsive-16by9 {
            data-toggle="modal"
            data-target="#video-modal"
            data-provider=story.video_info[:provider]
            data-video-id=story.video_info[:id]
            data-video-url=story.video_url }
            img src=story.video_info[:thumbnail_url]
              .play-button
                = image_tag('icons/bs_play.svg', alt: 'play')
        - else
          = image_tag('placeholders/video-placeholder.jpg', id: 'video-placeholder', alt: 'video thumbnail')

  .form-group 
    .visible-sm-block.col-sm-offset-1.col-sm-10
      / = form.label(:results, 'Results')
    = form.label(:results, class: 'control-label col-md-3 visible-md-inline-block visible-lg-inline-block')
    .col-md-7.col-lg-6.visible-md-block.visible-lg-block
      .list-group data-story-target="resultsList" data-controller="list-group"
        = form.fields_for(:results) do |results_form|
          a.list-group-item href="javascript:;" data-list-group-target="item"
            i.fa.fa-fw.fa-arrows-v
            = results_form.text_field( \
                :description,
                class: 'form-control',
                data: { \
                  list_group_target: 'itemInput',
                  action: 'input->list-group#onItemInput',
                  initial_value: results_form.object.description })
            = results_form.check_box(:_destroy, { class: 'hidden' }, true, false)
            p.list-group-item-text data-list-group-target="itemText"
              = results_form.object.description
            button.btn {
              type="button" 
              data-action="list-group#remove"
              data-controller="tooltip"
              data-tooltip-options-value={ title: "Delete" }.to_json }
              i.fa.fa-fw.fa-remove
            button.btn {
              type="button" 
              data-action="list-group#undo"
              data-list-group-target="undoButton"
              data-controller="tooltip" }
              i.fa.fa-fw.fa-undo

/= render('shared/submission_footer', { modifier: 'story', story: story })