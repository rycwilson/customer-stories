/ Since distinct id/name attributes are required, use form_tag instead of form_with (which auto-generates id/name attributes)
= form_tag( \
    company_cta_path(company, cta),
    method: :patch,
    id: "cta-#{cta.id}-form",
    data: { controller: 'cta' }) do |form|
  
  = hidden_field_tag( \
      "cta_#{cta.id}[company_attributes][id]",
      company.id,
      disabled: !cta.primary?,
      data: { cta_target: 'companyField' })

  .form-group 
    = label_tag("cta_#{cta.id}[description]", 'Description')
    = text_field_tag( \
        "cta_#{cta.id}[description]", 
        cta.description, 
        class: 'form-control',
        placeholder: 'Description',
        autocomplete: 'off')

  .form-group 
    = label_tag("cta_#{cta.id}[display_text]", 'Display text')
    = text_field_tag( \
        "cta_#{cta.id}[display_text]", 
        cta.display_text, 
        class: 'form-control',
        placeholder: 'Display text',
        autocomplete: 'off', 
        data: { action: 'cta#updateCustomButtonText' })

  .form-group 
    - if cta.type == 'CtaLink'
      = label_tag("cta_#{cta.id}[link_url]", 'Website URL')
      = text_field_tag( \
          "cta_#{cta.id}[link_url]", 
          cta.link_url,
          class: 'form-control',
          placeholder: 'Website URL',
          autocomplete: 'off')

    - elsif cta.type == 'CtaForm'
      = label_tag("cta_#{cta.id}[form_html]", 'HTML')
      = text_area_tag( \
          "cta_#{cta.id}[form_html]",
          cta.form_html,
          class: 'form-control',
          placeholder: '<script> or <form> tags',
          autocomplete: 'off',
          rows: 3)

  .form-group 
    .checkbox
      = label_tag("cta_#{cta.id}[primary]") do
        = check_box_tag( \
            "cta_#{cta.id}[primary]",
            not cta.primary?, 
            false,
            data: { action: 'cta#togglePrimary' })
        = "#{cta.primary? ? 'Remove as' : 'Make this the'} Main CTA"

  .cta__custom-button class=('hidden' if !cta.primary?) data-cta-target="customButton" 
    div
      = label_tag("cta_#{cta.id}[company_attributes][primary_cta_background_color]", 'Button')
      = color_field_tag( \
          "cta_#{cta.id}[company_attributes][primary_cta_background_color]",
          company.primary_cta_background_color,
          class: 'form-control',
          disabled: !cta.primary?,
          data: { cta_target: 'customButtonBackgroundColorInput companyField' })
      = label_tag("cta_#{cta.id}[company_attributes][primary_cta_text_color]", 'Text')
      = color_field_tag( \
          "cta_#{cta.id}[company_attributes][primary_cta_text_color]",
          company.primary_cta_text_color,
          class: 'form-control',
          disabled: !cta.primary?,
          data: { cta_target: 'customButtonTextColorInput companyField' })
    div style="background-color:#{company.header_color_1}"
      button.btn.btn-lg.btn-custom {
        type="button" 
        data-cta-target="customButtonDemo"
        data-bg-color="#{company.primary_cta_background_color}"
        data-color="#{company.primary_cta_text_color}" }
        = cta.display_text
    .help-block CTA button will appear in the header as shown

  hr

  div style="display:flex; justify-content:#{cta.primary? ? 'flex-end' : 'space-between'}"
    - unless cta.primary?
      / TODO button_to would be better here, but first need to position the button outside of the form (no nested forms)
      = link_to( \
          'Delete',
          company_cta_path(company, cta),
          class: 'btn btn-sm btn-danger',
          data: { turbo_method: 'delete' })
    = submit_tag('Save changes', class: 'btn btn-sm btn-success')