= turbo_stream.append 'main-modal-content' do 
  .modal-footer data-modal-target="footer"
    button.btn.btn-default type="button" data-dismiss="modal" Cancel
    = submit_tag('Create CTA', class: 'btn btn-success', form: 'new-cta-form')

= turbo_stream.append 'main-modal-body' do

  / To avoid the fields being named `cta_link` or `cta_form`, provide a scope. (This means the url needs to be explicitly set.)
  = form_with( \
      model: @cta,
      url: company_ctas_path(@company),
      scope: 'cta',
      local: true,
      id: 'new-cta-form',
      data: { controller: 'cta' }) do |form|

    .form-group data-action="change->cta#toggleType"
      label.control-label Type
      .radio style="margin-top:0"
        = form.label(:type_ctalink) do
          = form.radio_button(:type, 'CtaLink', checked: true)
          | Link
      .radio
        = form.label(:type_ctaform) do
          = form.radio_button(:type, 'CtaForm')
          | Web Form
    
    .form-group 
      = form.label(:description, 'Description', class: 'control-label')
      = form.text_field(:description, class: 'form-control', placeholder: 'Description')
      .help-block 
        | Optional

    .form-group 
      = form.label(:display_text, 'Display Text', class: 'control-label')
      = form.text_field( \
          :display_text,
          class: 'form-control',
          placeholder: 'Display Text',
          data: { action: 'cta#updateCustomButtonText' })
      .help-block 

    .form-group data-cta-target="typeSpecificField"
      = form.label(:link_url, 'Website URL', class: 'control-label')
      = form.text_field(:link_url, class: 'form-control', placeholder: 'Website URL')

    .form-group.hidden data-cta-target="typeSpecificField"
      = form.label(:form_html, 'HTML', class: 'control-label')
      = form.text_area(:form_html, class: 'form-control', placeholder: '<script> or <form> tags', rows: 3)

    .form-group
      .checkbox
        = form.label(:primary, class: 'control-label') do
          = form.check_box(:primary, { data: { action: 'cta#togglePrimary' } }, true, false)
          | Make this the Main CTA

    .cta__custom-button class=('hidden' unless @cta.primary?) data-cta-target="customButton"
      div
        = form.fields_for(:company) do |company_fields|
          = company_fields.label(:primary_cta_background_color, 'Button', class: 'control-label')
          = company_fields.color_field( \
              :primary_cta_background_color,
              class: 'form-control',
              disabled: !@cta.primary?,
              data: { cta_target: 'customButtonBackgroundColorInput companyField' })
          = company_fields.label(:primary_cta_text_color, 'Text', class: 'control-label')
          = company_fields.color_field( \
              :primary_cta_text_color,
              class: 'form-control',
              disabled: !@cta.primary?,
              data: { cta_target: 'customButtonTextColorInput companyField' })
      div style="background-color:#{@company.header_color_1}"
        button.btn.btn-lg.btn-custom {
          type="button" 
          data-cta-target="customButtonDemo"
          data-bg-color="#{@company.primary_cta_background_color}"
          data-color="#{@company.primary_cta_text_color}" }
          | Display Text
      .help-block CTA button will appear in the header as shown
